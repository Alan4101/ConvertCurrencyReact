{"version":3,"sources":["components/nav/Nav.js","config.js","components/currency-rate/CurrencyItem.js","components/currency-rate/CurrencyList.js","components/pages/Home.js","components/calculate-currency/CalculateCurrency.js","components/pages/Converter.js","App.js","reportWebVitals.js","index.js"],"names":["NavComponent","className","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","to","activeClassName","aria-current","config","API_EXCHANGE","API_PRIVATBANK","CurrencyItem","props","data","ccy","base_ccy","buy","sale","Number","toFixed","CurrencyList","useState","error","setError","isLoaded","setIsLoaded","items","setItems","useEffect","fetch","then","res","json","result","message","scope","map","i","color","height","width","Home","CalculateCurrency","currencies","base","convertTo","amount","date","optionsCurrency","setOptions","isLoading","setIsLoading","isError","setIsError","handleSelect","e","prev","target","name","value","cleanup","a","isNaN","axios","get","response","rates","console","log","calculate","classes","makeStyles","theme","formControl","minWidth","selectEmpty","marginTop","spacing","useStyles","Alert","severity","AlertTitle","TextField","itemType","label","cc","code","currency","onChange","prevState","onKeyPress","replace","FormControl","InputLabel","Select","labelId","filter","MenuItem","IconButton","onClick","preventDefault","disabled","Converter","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94a3a45c.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport default function NavComponent(){\r\n    return(\r\n        <nav className=\"navbar navbar-expand-lg navbar-light  indigo-c\">\r\n                <div className=\"container-fluid\">\r\n                    {/*<NavLink to=\"/\" className=\"navbar-brand\">Converter</NavLink>*/}\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\"\r\n                            aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                                <NavLink to=\"/\"\r\n                                    className=\"nav-link\"\r\n                                    activeClassName=\"active\"\r\n                                >Головна</NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink\r\n                                    className=\"nav-link \"\r\n                                    aria-current=\"page\"\r\n                                    to=\"/converter\"\r\n                                >Конвертер валют</NavLink>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n    )\r\n}","\r\nconst config ={\r\n    API_EXCHANGE: 'https://api.exchangeratesapi.io/latest?base=',\r\n    API_PRIVATBANK: 'https://api.privatbank.ua/p24api/pubinfo?json&exchange&coursid=5'\r\n}\r\nexport default config","import React from 'react'\r\n\r\nexport default function CurrencyItem(props){\r\n\r\n    const {ccy, base_ccy, buy, sale} = props.data\r\n\r\n    return(\r\n        <tr>\r\n            <th>{ccy}</th>\r\n            <td>{base_ccy}</td>\r\n            <td>{Number(buy).toFixed(2)}</td>\r\n            <td>{Number(sale).toFixed(2)}</td>\r\n        </tr>\r\n\r\n    )\r\n}","import React,  { useState, useEffect} from 'react'\r\n\r\nimport Loader from \"react-loader-spinner\"\r\n\r\nimport config from \"../../config\"\r\nimport CurrencyItem from \"./CurrencyItem\"\r\n\r\nexport default function CurrencyList (){\r\n\r\n    const [error, setError] = useState(null)\r\n    const [isLoaded, setIsLoaded] = useState(false)\r\n    const [items, setItems] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetch(config.API_PRIVATBANK)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoaded(true)\r\n                    setItems(result)\r\n\r\n                },\r\n                (error) => {\r\n                    setIsLoaded(true)\r\n                    setError(error)\r\n                }\r\n            )\r\n    }, [])\r\n\r\n\r\n\r\n    if(error){\r\n        return <div>Error: {error.message}</div>\r\n    }else if(!isLoaded){\r\n        // return <div>Loading...</div>\r\n        return (\r\n            <div className=\"loader-container\">\r\n                <div className=\"loader-wrapper\">\r\n                    <Loader type=\"Bars\" color=\"#8540f5\" height={35} width={35} />\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }else {\r\n        return (\r\n            <div className=\"currency-list-container\">\r\n                <div className=\"sub-title__base-ccy\">\r\n                    <p>Базова валюта: { items[0]?items[0].base_ccy: 'UAH'}</p>\r\n                </div>\r\n                <table className=\"table table-currency\">\r\n                    <thead className=\"thead-dark\">\r\n                    <tr className=\"table-header\">\r\n                        <th scope=\"col\"></th>\r\n                        <th scope=\"col\"></th>\r\n                        <th scope=\"col\">Купівля</th>\r\n                        <th scope=\"col\">Продаж</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        items.map(i=> (<CurrencyItem key={i.ccy} data={i}/>))\r\n                    }\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport CurrencyList from '../currency-rate/CurrencyList'\r\n\r\nexport default function Home() {\r\n\r\nreturn(\r\n    <div className=\"container text-center\">\r\n        <div className=\"title-page\">\r\n            <h1>Курс валют</h1>\r\n        </div>\r\n        <CurrencyList/>\r\n    </div>\r\n)\r\n\r\n}","import React, {useState, useEffect} from 'react'\r\n\r\nimport Loader from 'react-loader-spinner'\r\nimport axios from 'axios'\r\nimport cc from 'currency-codes'\r\n\r\nimport config from \"../../config\"\r\n\r\nimport { Alert, AlertTitle } from '@material-ui/lab'\r\nimport { TextField,\r\n    IconButton,\r\n    Select,\r\n    InputLabel,\r\n    FormControl,\r\n    MenuItem,\r\n    makeStyles\r\n} from '@material-ui/core'\r\nimport ImportExportIcon from '@material-ui/icons/ImportExport'\r\n\r\nimport './calculate-curency.css'\r\n\r\nexport default function CalculateCurrency(){\r\n\r\n    const currencies = [\"USD\", \"EUR\", \"PLN\",\"CZK\", \"RUB\"]\r\n    const [optionsCurrency, setOptions] = useState({\r\n        base: \"USD\",\r\n        convertTo:'EUR',\r\n        amount: '',\r\n        result: '',\r\n        date: ''\r\n    })\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isError, setIsError] = useState(false);\r\n\r\n    const handleSelect = e =>{\r\n        setOptions(prev => {\r\n            return{...prev, [e.target.name]: e.target.value,}\r\n        })\r\n    }\r\n\r\n    const onlyNumber = e =>{\r\n        e.target.value = e.target.value.replace(/[^0-9.]/g,\"\");\r\n    }\r\n\r\n    const handleInput = e =>{\r\n        setOptions((prevState) => {\r\n            return {...prevState, amount: e.target.value ,result: null, data: null}\r\n        })\r\n    }\r\n\r\n    const handleSwap = e => {\r\n        e.preventDefault()\r\n\r\n        setOptions(prev => {\r\n            return{...prev, convertTo: optionsCurrency.base, base: optionsCurrency.convertTo, result: null}\r\n        })\r\n    }\r\n\r\n    const { date, result , amount, convertTo, base} = optionsCurrency\r\n\r\n    useEffect(() => {\r\n        let cleanup = false\r\n        const calculate = async () =>{\r\n            try {\r\n\r\n                if(optionsCurrency.amount === isNaN){\r\n                    return null\r\n                }else {\r\n                    const response = await axios.get(`${config.API_EXCHANGE}${optionsCurrency.base}`)\r\n                    const date = response.data.date\r\n                    const result = (response.data.rates[optionsCurrency.convertTo] * optionsCurrency.amount).toFixed(4)\r\n\r\n                    if(!cleanup){\r\n                        setOptions(prev =>{\r\n                            return{ ...prev, date, result }\r\n                        })\r\n                    }\r\n                    setIsLoading(true)\r\n                }\r\n            }catch (error) {\r\n                setIsError(true)\r\n                console.log(error.message)\r\n            }\r\n        }\r\n\r\n        calculate()\r\n\r\n        return ()=> cleanup =true\r\n\r\n    }, [base, convertTo, amount])\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        formControl: {\r\n            minWidth: 200,\r\n        },\r\n        selectEmpty: {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    }));\r\n    const classes = useStyles()\r\n\r\n    if(isError) {\r\n        return(\r\n            <Alert severity='error'>\r\n                <AlertTitle>Error</AlertTitle>\r\n                Щось пішло не так!\r\n            </Alert>\r\n        )\r\n    }else if(!isLoading){\r\n        return (\r\n            <div className=\"loader-container\">\r\n                <div className=\"loader-wrapper\">\r\n                    <Loader type=\"Bars\" color=\"#8540f5\" height={35} width={35} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }else {\r\n        return(\r\n            <div className=\"form-container\">\r\n                <h4>Курс взятий за поточну дату: {date}</h4>\r\n                <p>{ amount==='' ? 0 : amount} <b>{base}</b> дорівнює {result} <b>{ convertTo}</b> </p>\r\n\r\n                <form className='form-currency'>\r\n                    <div className=\"form-wrapper\">\r\n                        <div className=\"form-block\">\r\n                            <div className=\"mb-3\">\r\n                                <TextField\r\n                                    itemType='number'\r\n                                    label={cc.code(base).currency}\r\n                                    onChange={handleInput}\r\n                                    onKeyPress={onlyNumber}\r\n                                />\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <FormControl className={classes.formControl}>\r\n                                    <InputLabel id=\"baseCurrencySelect\">Базова валюта</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"baseCurrencySelect\"\r\n                                        id=\"demo-simple-select\"\r\n                                        value={base}\r\n                                        name=\"base\"\r\n                                        onChange={handleSelect}\r\n                                    >\r\n                                        {\r\n                                            currencies\r\n                                                .filter(i => i !== convertTo)\r\n                                                .map( currency => <MenuItem  key={currency} value={currency}>{currency}</MenuItem>)\r\n                                        }\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-block\">\r\n                            <div className=\"form-block__wrapper\">\r\n                                <IconButton\r\n                                    className='btn btn-primary'\r\n                                    onClick={handleSwap}\r\n                                    aria-label=\"Change\">\r\n                                    <ImportExportIcon/>\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-block\">\r\n                            <div className=\"mb-3\">\r\n                                <TextField\r\n                                    disabled\r\n                                    label={cc.code(convertTo).currency}\r\n                                    value={amount === \"\" ? \"\" : result === null ? \"Calculating...\" : result }\r\n                                />\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <FormControl className={classes.formControl}>\r\n                                    <InputLabel id=\"convertCurrencySelect\">Валюта для конвертації</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"convertCurrencySelect\"\r\n                                        id=\"demo-simple-select\"\r\n                                        value={convertTo}\r\n                                        name=\"convertTo\"\r\n                                        onChange={handleSelect}\r\n                                    >\r\n                                        {\r\n                                            currencies\r\n                                                .filter(i => i !== base)\r\n                                                .map( currency => <MenuItem  key={currency} value={currency}>{currency}</MenuItem>)\r\n                                        }\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React from 'react'\r\nimport CalculateCurrency from '../calculate-currency/CalculateCurrency'\r\n\r\nexport default function Converter(){\r\n    return(\r\n        <div className='container container-converter'>\r\n            {/*<h1>Конвертер валют</h1>*/}\r\n            <CalculateCurrency/>\r\n        </div>\r\n    )\r\n}","import './App.css';\nimport React from 'react'\n\nimport {BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport NavComponent from \"./components/nav/Nav\";\nimport Home from \"./components/pages/Home\";\nimport Converter from \"./components/pages/Converter\";\n\nfunction App() {\n  return (\n      <BrowserRouter>\n          <NavComponent/>\n        <Switch>\n            <Route path={'/'} exact component={ Home }/>\n            <Route path={'/converter'}  component={ Converter }/>\n        </Switch>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n  //\n  // </React.StrictMode>,\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}